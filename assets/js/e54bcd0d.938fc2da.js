"use strict";(self.webpackChunkit_3038c=self.webpackChunkit_3038c||[]).push([[771],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>k});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),p=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=p(e.components);return n.createElement(o.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=p(a),k=r,d=m["".concat(o,".").concat(k)]||m[k]||c[k]||l;return a?n.createElement(d,i(i({ref:t},u),{},{components:a})):n.createElement(d,i({ref:t},u))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=m;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var p=2;p<l;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},9745:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>c,frontMatter:()=>l,metadata:()=>s,toc:()=>p});var n=a(7462),r=(a(7294),a(3905));const l={title:"AWK Command",sidebar_position:13},i=void 0,s={unversionedId:"WIP/awk",id:"WIP/awk",title:"AWK Command",description:"List of Links for this week:",source:"@site/content/modules/WIP/awk.md",sourceDirName:"WIP",slug:"/WIP/awk",permalink:"/IT3038C/modules/WIP/awk",draft:!1,tags:[],version:"current",sidebarPosition:13,frontMatter:{title:"AWK Command",sidebar_position:13},sidebar:"defaultSidebar",previous:{title:"Week 12 \u2013 Websites in Python using Flask",permalink:"/IT3038C/modules/week-12"},next:{title:"Writing Scripts with Go(lang)",permalink:"/IT3038C/modules/WIP/go"}},o={},p=[{value:"Optional Lab",id:"optional-lab",level:2}],u={toc:p};function c(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"List of Links for this week:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.lynda.com/Linux-tutorials/Using-awk-advanced-text-processing/604236/642385-4.html"},"https://www.lynda.com/Linux-tutorials/Using-awk-advanced-text-processing/604236/642385-4.html")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.lynda.com/Linux-tutorials/Using-sed-AWK-more-powerful-scripting/504429/536324-4.html"},"https://www.lynda.com/Linux-tutorials/Using-sed-AWK-more-powerful-scripting/504429/536324-4.html")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.lynda.com/Linux-tutorials/Welcome/162719/173835-4.html?srchtrk=index%3a1%0alinktypeid%3a2%0aq%3aawk%0apage%3a1%0as%3arelevance%0asa%3atrue%0aproducttypeid%3a2"},"https://www.lynda.com/Linux-tutorials/Welcome/162719/173835-4.html?srchtrk=index%3a1%0alinktypeid%3a2%0aq%3aawk%0apage%3a1%0as%3arelevance%0asa%3atrue%0aproducttypeid%3a2")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"http://www.grymoire.com/Unix/Awk.html"},"http://www.grymoire.com/Unix/Awk.html"))),(0,r.kt)("p",null,"Awk is used for advanced text processing. It is its own language in a sense, but it ties closely in with bash scripting. It is incredibly complex and powerful, but there is a bit of a learning curve."),(0,r.kt)("p",null,"You will need to login to your LINUX VM to complete these exercises."),(0,r.kt)("p",null,"Sample command:"),(0,r.kt)("p",null,"First, let's create a simple file called /tmp/awktest.txt"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"vim /tmp/awktest.txt\n")),(0,r.kt)("p",null,"In this file, add a few lines with some text. You can put in anything you want, but I'll just use a few simple lines of text:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"Hello from AWK!\nThis is not amazing yet!\nHere is a number: 7\n")),(0,r.kt)("p",null,"Save and close this file. Now, we can use awk to perform some tests against this file:"),(0,r.kt)("p",null,"FORMAT for AWK REQUEST:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"awk 'BEGIN{some starting code} { a pattern or command} END{ some ending code}' /path/to/working/file\n")),(0,r.kt)("p",null,"AWK code is always wrapped in single or double-quotes and always has curly braces around the command being run"),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'awk \'BEGIN{print "start of file"} {print} END{print "end of file"}\' /tmp/awktest.txt\n')),(0,r.kt)("p",null,"Here's how it works:"),(0,r.kt)("p",null,'Awk has a BEGIN and an END, which are optional for some commands. The center command will take whatever command, in this case "print", and execute it for each line passed to the awk command.'),(0,r.kt)("p",null,"We can get AWK input a few different ways."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'cat /tmp/awktest.txt\n\ncat /tmp/awktest.txt | awk \'BEGIN{print "start of file"} {print} END{print "end of file"}\'\n')),(0,r.kt)("p",null,"We can apply AWK to any kind of inputs, not just a text file."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"ifconfig | awk '{print $2}'\n")),(0,r.kt)("p",null,"The results of the command is the same with or without awk, but you get the idea. We can apply additional bash commands like GREP to filter this, like we did in a previous lab"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"ifconfig | awk '{print $2}' | grep 10\n")),(0,r.kt)("p",null,"AWK can assign variables and print those as well."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'echo | awk \'{var1="v1"; var2="v2"; print var1,var2}\'\n')),(0,r.kt)("p",null,"AWK has several variables delivered out of the box."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"NR: Current line number"),(0,r.kt)("li",{parentName:"ul"},"NF: Current number of fields for that line"),(0,r.kt)("li",{parentName:"ul"},"$0: variable for the current line"),(0,r.kt)("li",{parentName:"ul"},"$1: variable for the first field. Can be $1, $2\u2026$n for the number of fields (NF)")),(0,r.kt)("p",null,"Let's use these to see what we get. We'll use our test file for input."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"awk '{print NR NF}' /tmp/awktest.txt\n")),(0,r.kt)("p",null,"The output shows a few 2 digit numbers, but it's actually showing the first column is the row number and the second column the number of fields."),(0,r.kt)("p",null,"Let's concatenate the output to make it more readable."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'awk \'{print "Rows: "NR" Fields: "NF}\' /tmp/awktest.txt\n')),(0,r.kt)("p",null,"On its own, this may not feel particularly useful, but you can start to see there are implications for finding the number or rows and fields in a line."),(0,r.kt)("p",null,"We can also pass the number of the field to display."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"awk '{print $1}' /tmp/awktest.txt\n")),(0,r.kt)("p",null,"This displays the first 'field' of each row, delimited by a space."),(0,r.kt)("p",null,"Using this information on how the basics of AWK works, we can apply it to finding some real, readable information about our system."),(0,r.kt)("p",null,"Here are some examples:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"ps \u2013ef"),"  -  gives us a list of running processes"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"ps -ef | awk '{print $1 $2 $8}'\n")),(0,r.kt)("p",null,"This give us the User, Pid and Name of the process. Let's apply some formatting to this to make it more reasonable."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'ps -ef | awk \'{print "User: " $1 " Pid: " $2 " Process: "$8}\'\n')),(0,r.kt)("p",null,"Using PIPE (",(0,r.kt)("inlineCode",{parentName:"p"},"|"),") we can get all kinds of valuable information about our system."),(0,r.kt)("p",null,"We can use this to find data, like displaying data from the /etc/passwd file. You can change the delimiter with -F"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cat /etc/passwd | awk -F: '{print $1,$7}'\n")),(0,r.kt)("p",null,"This shows us which users have a default shell."),(0,r.kt)("p",null,"Some other helpful awk commands:"),(0,r.kt)("p",null,"Get disk-space percentage used"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"df -H | grep -vE '^Filesystem|tmpfs|cdrom' | awk '{ print $5 \" \" $1 }'\n")),(0,r.kt)("p",null,"Get IP addresses with awk, grep and regex (more on that in later weeks)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"ifconfig | awk '{print $2}' | grep [0-9]\\.[0-9]\\.[0-9]\\.[0-9]\n")),(0,r.kt)("p",null,"List number and type of active network connections"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"netstat -ant | awk '{print $NF}' | grep -v '[a-z]' | sort | uniq -c\n")),(0,r.kt)("h2",{id:"optional-lab"},"Optional Lab"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Review some of the AWK commands at ",(0,r.kt)("a",{parentName:"li",href:"https://blog.urfix.com/25-awk-commands-tricks/"},"https://blog.urfix.com/25-awk-commands-tricks/")),(0,r.kt)("li",{parentName:"ul"},"Review the tutorial to generate HTML at ",(0,r.kt)("a",{parentName:"li",href:"http://www.thegeekstuff.com/2010/01/awk-tutorial-understand-awk-variables-with-3-practical-examples"},"http://www.thegeekstuff.com/2010/01/awk-tutorial-understand-awk-variables-with-3-practical-examples")),(0,r.kt)("li",{parentName:"ul"},"Select two commands from the first link and implement them into a BASH script that generates an HTML file on your Linux server. Push the script to github.uc.edu.")))}c.isMDXComponent=!0}}]);