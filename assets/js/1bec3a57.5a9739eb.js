"use strict";(self.webpackChunkit_3038c=self.webpackChunkit_3038c||[]).push([[5510],{5680:(e,t,n)=>{n.d(t,{xA:()=>c,yg:()=>y});var r=n(6540);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(n),g=o,y=p["".concat(s,".").concat(g)]||p[g]||m[g]||i;return n?r.createElement(y,a(a({ref:t},c),{},{components:n})):r.createElement(y,a({ref:t},c))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=g;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:o,a[1]=l;for(var u=2;u<i;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},2369:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var r=n(8168),o=(n(6540),n(5680));const i={title:"Python RegEx",sidebar_label:"Overview",sidebar_position:4,slug:"/10/python-regex"},a=void 0,l={unversionedId:"module-10/python-regex/index",id:"module-10/python-regex/index",title:"Python RegEx",description:"Learning outcomes",source:"@site/content/modules/module-10/python-regex/index.mdx",sourceDirName:"module-10/python-regex",slug:"/10/python-regex",permalink:"/modules/10/python-regex",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Python RegEx",sidebar_label:"Overview",sidebar_position:4,slug:"/10/python-regex"},sidebar:"modules",previous:{title:"Finalize",permalink:"/modules/9/python-args/finalize"},next:{title:"Finalize",permalink:"/modules/10/python-regex/finalize"}},s={},u=[{value:"Learning outcomes",id:"learning-outcomes",level:2},{value:"Goals",id:"goals",level:2},{value:"Guidelines",id:"guidelines",level:2},{value:"Instructions",id:"instructions",level:2},{value:"Resources",id:"resources",level:2}],c={toc:u},p="wrapper";function m(e){let{components:t,...n}=e;return(0,o.yg)(p,(0,r.A)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("h2",{id:"learning-outcomes"},"Learning outcomes"),(0,o.yg)("ol",null,(0,o.yg)("li",{parentName:"ol"},"Practice the use of Git and GitHub."),(0,o.yg)("li",{parentName:"ol"},"Practice the use of Python to run commands."),(0,o.yg)("li",{parentName:"ol"},"Practice the use of Python to interact with files.")),(0,o.yg)("h2",{id:"goals"},"Goals"),(0,o.yg)("p",null,"This is a collection of Python exercises and coding challenges. The focus in this assignment is to:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Practice problem solving."),(0,o.yg)("li",{parentName:"ul"},"Practice Python fundamentals."),(0,o.yg)("li",{parentName:"ul"},"Practice using the official documentation")),(0,o.yg)("h2",{id:"guidelines"},"Guidelines"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"This assignment utilized automated-tests to check for the correctness of your code. These tests can be a bit specific about what you name things",(0,o.yg)("ul",{parentName:"li"},(0,o.yg)("li",{parentName:"ul"},"Please Follow the instructions on this assignment for the best outcome."))),(0,o.yg)("li",{parentName:"ul"},"Make a habit of committing and pushing your code frequently to GitHub."),(0,o.yg)("li",{parentName:"ul"},"Make sure to meaningful commit messages that describe what you did."),(0,o.yg)("li",{parentName:"ul"},"Make sure the automated tests and checks continue to pass after you make changes."),(0,o.yg)("li",{parentName:"ul"},"To be able to run the automated grading checks, make sure you have installed Python 3"),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("strong",{parentName:"li"},"Don't forget to fill out the self assessment on the README file"))),(0,o.yg)("h2",{id:"instructions"},"Instructions"),(0,o.yg)("ol",null,(0,o.yg)("li",{parentName:"ol"},"Accept the Assignment on Canvas.")),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"This will create a repository for you with a few starting files.",(0,o.yg)("pre",{parentName:"li"},(0,o.yg)("code",{parentName:"pre"},"  .\n  \u251c\u2500\u2500 .vscode\n  \u2502   \u2514\u2500\u2500 settings.json\n  \u251c\u2500\u2500 regex.py                  \u2b05\ufe0f\n  \u251c\u2500\u2500 test_regex.py\n  \u251c\u2500\u2500 .gitignore\n  \u251c\u2500\u2500 requirements.txt\n  \u2514\u2500\u2500 README.md                 \ud83d\udd3c: update this once done\n"))),(0,o.yg)("li",{parentName:"ul"},"You will only be working on the files marked with the arrows")),(0,o.yg)("ol",{start:2},(0,o.yg)("li",{parentName:"ol"},"Clone down the repository to your local computer."),(0,o.yg)("li",{parentName:"ol"},"Install the project dependencies using the ",(0,o.yg)("inlineCode",{parentName:"li"},"pip install -r requirements.txt")," command.")),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Make sure you're in the project directory in the terminal before you run this command.")),(0,o.yg)("ol",{start:4},(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("p",{parentName:"li"},"Run the project tests using the command ",(0,o.yg)("inlineCode",{parentName:"p"},"pytest"),"\nThe starter code has invalid syntax so the tests will fail to run")),(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("p",{parentName:"li"},"Our task would be to implement the functions in the files marked with \u2b05\ufe0f arrow above until all the tests pass.")),(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("p",{parentName:"li"},"at the end of each test, commit your code ",(0,o.yg)("img",{alt:"commit logo",style:{height:"20px",marginBottom:"-4px"},src:"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e5/Octicons-git-commit.svg/1200px-Octicons-git-commit.svg.png"})," ",(0,o.yg)("inlineCode",{parentName:"p"},'git commit -m "finished test xyz"'),".")),(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("p",{parentName:"li"},(0,o.yg)("strong",{parentName:"p"},"DON'T FORGET")," to Update the README.md file with your self assessment"),(0,o.yg)("ul",{parentName:"li"},(0,o.yg)("li",{parentName:"ul"},"Your grade"),(0,o.yg)("li",{parentName:"ul"},"Self Reflection"),(0,o.yg)("li",{parentName:"ul"},"How long it took you to complete the assignment"))),(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("p",{parentName:"li"},"Push your code."))),(0,o.yg)("h2",{id:"resources"},"Resources"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"https://docs.python.org/3.10/library/re.html#module-re"},"Standard Python re module"))))}m.isMDXComponent=!0}}]);